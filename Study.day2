HTTP 요청/응답 패킷 형식
    
    요청패킷
        - 요청헤더 : 클라이언트에서 필요한 헤더 Key/Value를 세팅한 후 요청, 전달
        - 첫번째 빈줄 : Header와 Body 구분자
        - Body : 클라이언트에서 필요한 Body를 세팅한 후 요청, 전달
    
    응답패킷
        - 응답헤더 : 서버에 필요한 Key/Value를 세팅한 후, 응답, 전달
        - 첫번째 빈줄 : Header와 Body 구분자
        - Body : 서버에서 필요한 Body를 세팅한 후 요청, 전달

    요청패킷 vs 응답패킷
        - 클라이언트는 사용자 이기 때문에 당연히 서버에게 요청을 할 것이고 서버는 서비를 하는 업체 입장이기 때문에 응답을 해주는 것
        - 클라이언트 -요청(음식점의 주문) vs 서버는 응답(주문을 받아 알맞은 음식을 서빙)

헤더(Header)란?
    - HTTP요청/응답 시에 헤더 정보가 Key/value 형식으로 세팅이 된다.
    - 대개 브라우저에서는 다음 헤더를 설정
        * User-Agent : 브라우저의 종류
        * Referer : 이전 페이지 URL
        * Accept-Language : 어떤 언어로 응답을 원하는가?
        * Authorization : 인증 정보
    - 크롤링을 할 때는 User-Agent헤더와 Referer를 커스텀하게 설정할 필요가 있다.
        * 서비스에 따라 UserAgent헤더와 Referer헤더를 통해 응답을 거부하기도 함

Body란?
    - HTTP 요청시에는 Body가 없고, 응답에만 있음
    
Web
    - HTML이라는 텍스트 형태의 특수 문서는 웹 브라우저가 해석한 뒤 데이터를 시각화해서 웹페이지로 보여줄 수 있다.
    - 웹 서버 입장에서는 HTML이라는 하나의 혀애로 데이터를 반환하면 크롬, 익스플로러 등의 다양한 브라우져에서 같은 화면이 출력될 수 있다.
    - 웹 서버는 HTML 뿐만 아니라 다양한 형태로 데이터를 반환할 수 있다.
    - 웹 페이지의 구성요소
        * HTML(Hyper Text Markup Language)
        * CSS(Cascading Style Sheet)
        * 자바스크립트
    - HTML은 데이터를 구조적으로 표현하는 방법이며, 데이터를 나열만 하기 때문에 HTML만으로 표현된 웹페이지는 투박하다.
    - CSS는 이러한 HTML에 색을 입히거나 디자인을 변경해서 웹페이지를 예쁘게 꾸민다.
    - 자바스크립트는 이벤트를 정의해서 웹 페이지에 생명을 불어 넣는다.

HTML
    - HTML 이란 Hypertext Markup Language 를 뜻한다.
    - 하이퍼 텍스트(hyper text)
        * 비순차적으로 검색할 수 있는 문서를 의미
        * 일반적인 문서는 제공해주는 내용 그대로 하나씩 볼 수 있는 반면 하이퍼 텍스트는 링크를 클릭 해서 다른 문서로의 이동을 지원
    - 마크업 언어(Markup Language)
        * 태그와 같은 구분자를 사용해서 데이터의 구조를 기술
        * 화살괄호(<>)와 안쪽의 문자열을 태그라고 부르는데, 일반적으로 시작 태그와 종료 태그를 하나의 쌍으로 사용
        * <태그> 데이터 </태그> 형태로 사용하며 슬래쉬가 포함된 태그를 종료 태그라고 함

JSON
    - JavaScript Object Notation은 Javascript 객체 문법으로 구조화된 데이터를 표현하기 위한 문자 기반의 표준 포맷
    - 웹 어플리케이션에서 데이터를 전송할 때 일반적으로 사용한다
    - JavaScript 객체 문법을 따르는 문자 기반의 데이터 포맷이다
    - JSON은 문자열 형태로 존재
